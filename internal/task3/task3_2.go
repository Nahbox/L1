package task3

import (
	"fmt"
	"sync"
)

// Точка входа в Task3 (2-й способ решения)
func Task3_2() {
	numbers := []int{2, 4, 6, 8, 10}

	// Создание мьютекса для обеспечения безопасного доступа к общей переменной.
	var mu sync.Mutex

	// Общая переменная для хранения суммы квадратов.
	var sum int

	var wg sync.WaitGroup

	// Итерация по числам в слайсе.
	for _, num := range numbers {
		// Увеличение счетчика горутин в WaitGroup.
		wg.Add(1)

		// Запуск горутины для вычисления квадрата числа и безопасного обновления общей переменной.
		go func(n int) {
			// Уменьшение счетчика горутин при завершении.
			defer wg.Done()

			// Вычисление квадрата числа.
			sqr := n * n

			// Захватываем мьютекс для безопасного обновления общей переменной.
			mu.Lock()
			sum += sqr
			mu.Unlock()
		}(num)
	}

	// Ожидание завершения всех горутин.
	wg.Wait()

	// Вывод суммы на экран.
	fmt.Printf("%d\n", sum)
}
